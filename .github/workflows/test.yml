name: test

on: push

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3"
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - run: python -m pip install black flake8 isort
      - run: |
          flake8 .
          black . --check
          isort .
  test:
    needs: linting
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.9"]  # "3.6", "3.7", "3.8",
        django-version: [ "3.1" ]  # "2.2", "3.0",
    steps:
      - uses: actions/checkout@v2
      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Use Poetry
        uses: sondrelg/install-poetry@0.1.0
        with:
          virtualenvs-create: true
      - name: Configure Poetry
        run: |
          poetry config --list
          poetry config experimental.new-installer false
      - name: Set up cache
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}-2
      - name: Install dependencies
        run: |
          source $HOME/.poetry/env
          poetry install
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      - name: Install django ${{ matrix.django-version }}
        run: |
          ls -la $HOME/.poetry/env
          source $HOME/.poetry/env
          python -m pip install "Django==${{ matrix.django-version }}" --upgrade --force-reinstall
      - name: Run tests
        run: |
          echo "------"
          ls -la $HOME/.poetry
          echo "------ 2"
          ls -la $HOME/.poetry/env
          echo "------ 3"
          source $HOME/.poetry/env
          echo "test2"
          poetry show
          echo "test3"
          poetry run pytest --cov=django_js_logger --verbose --color=yes --assert=plain
          poetry run coverage report
